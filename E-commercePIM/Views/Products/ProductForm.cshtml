@model E_commercePIM.ViewModels.ProductFormVM

@{
    var title = (Model.EditMode) ? Model.Name : Model.Heading;
    ViewBag.Title = title;
}

<div class="row">
    <h2 class="col-md-5">@title</h2>
    @if (Model.EditMode)
    {
        <div class="col-md-6">
            @Html.ActionLink("Delete", "Delete", new {id = @Model.Id}, new {@class = "btn btn-danger top-button"})
        </div>
    }
</div>

<!-- Tabs -->
<div class="row">
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="@Model.ShowGeneralPage">
            <a href="#general" aria-controls="general" role="tab" data-toggle="tab">General</a>
        </li>
        <li role="presentation" class="@Model.ShowVariantPage">
            <a href="#variants" aria-controls="variants" role="tab" data-toggle="tab">Variants</a>
        </li>
    </ul>
</div>

<br />

<!-- Tab panes -->
<div class="tab-content">
    <!-- General Page -->
    <div role="tabpanel" class="tab-pane @Model.ShowGeneralPage" id="general">
        @using (Html.BeginForm(Model.Action))
        {
            <div class="row">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.Id)
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price)
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(model => model.Description, 5, 5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SelectedCategories, "Categories (hold ctrl to select more than one):")
                        @Html.ListBoxFor(model => model.SelectedCategories, Model.AvailableCategories, new { @class = "form-control", size = 10 })
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- Variants Page -->
    <div role="tabpanel" class="tab-pane @Model.ShowVariantPage" id="variants">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Name)
            @Html.HiddenFor(model => model.Description)
            @Html.HiddenFor(model => model.VariantId)
            for (var i = 0; i < Model.SelectedCategories.Count; i++)
            {
                @Html.HiddenFor(model => Model.SelectedCategories[i])
            }
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.VariantName, new { @class = "control-label" })
                    @Html.EditorFor(model => model.VariantName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter suffix describing variant" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.VariantPrice, new { @class = "control-label" })
                    @Html.EditorFor(model => model.VariantPrice, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @if (Model.VariantButtonName.Equals("Save"))
                {
                    <input type="submit" value="@Model.VariantButtonName" name="submit" class="btn btn-success" formaction=@Url.Action("UpdateVariant") formmethod="post" />
                }
                else
                {
                    <input type="submit" value="@Model.VariantButtonName" name="submit" class="btn btn-success" formaction=@Url.Action("AddVariant") formmethod="post" />
                }
            </div>
        }

    <table class="table table-responsive table-bordered table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VariantName)
                <a href="@Url.Action("Edit", new {id = Model.Id, addNewVariant = true})">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VariantPrice)
            </th>
            <th></th>
        </tr>

        <!-- Parent Product -->
        <tr class="text-muted">
            <td>
                @Html.DisplayFor(model => model.Name)
            </td>
            <td>
                @Html.DisplayFor(model => model.Price)
            </td>
            <td>
            </td>
        </tr>
        <!-- Product Variants -->
        @foreach (var variant in Model.CurrentProductVariants)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => variant.Name)
                    <a href="@Url.Action("Edit", new {id = Model.Id, variantId = variant.Id})">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(model => variant.Price)
                </td>
                <td>
                    <a href="@Url.Action("Delete", new {id = variant.Id})">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </a>
                </td>
            </tr>
        }

    </table>
    </div>
</div>


@Html.ActionLink("Back to List", "Index")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}