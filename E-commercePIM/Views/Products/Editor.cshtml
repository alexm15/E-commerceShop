@model E_commercePIM.ViewModels.ProductEditorViewModel

@{
    ViewBag.Title = "Product Editor";
}

<div class="row">
    <h2 class="col-md-5">@Model.Name</h2>
    <div class="col-md-6">
        @Html.ActionLink("Delete", "Delete", new {id = @Model.Id}, new {@class = "btn btn-danger top-button"})
    </div>

</div>

<div class="row">
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active">
            <a href="#general" aria-controls="general" role="tab" data-toggle="tab">General</a>
        </li>
        <li role="presentation">
            <a href="#variants" aria-controls="variants" role="tab" data-toggle="tab">Variants</a>
        </li>
    </ul>
</div>

<br/>

<!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="general">
        @using (Html.BeginForm())
        {
            <div class="row">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                @Html.HiddenFor(model => model.Id)
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price)
                        @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(model => model.Description, 5, 5, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-default"/>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SelectedCategories, "Categories (hold ctrl to select more than one):")
                        @Html.ListBoxFor(model => model.SelectedCategories, Model.AvailableCategories, new {@class = "form-control", size = 10})
                    </div>
                </div>
            </div>
        }
    </div>
    <div role="tabpanel" class="tab-pane" id="variants">
        @using (Html.BeginForm("AddOrEditVariant", "Products"))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Name)
            @Html.HiddenFor(model => model.Description)
            for(var i = 0; i < Model.SelectedCategories.Count; i++)
            {
                @Html.HiddenFor(model => Model.SelectedCategories[i])
            }
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.VariantName, new { @class = "control-label" })
                    @Html.EditorFor(model => model.VariantName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.VariantPrice, new { @class = "control-label" })
                    @Html.EditorFor(model => model.VariantPrice, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Add Variant" class="btn btn-success" />
            </div>
        }
        <table class="table table-responsive table-bordered table-hover table-condensed">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VariantName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VariantPrice)
                </th>
                <th></th>
            </tr>

            <tr class="text-muted">
                <td>
                    @Html.DisplayFor(model => model.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Price)
                </td>
                <td>
                </td>
            </tr>
            @foreach (var variant in Model.CurrentProductVariants)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => variant.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => variant.Price)
                    </td>
                    <td>
                        <a href="@Url.Action("Delete", new {id = variant.Id})">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }

        </table>
    </div>
</div>


@Html.ActionLink("Back to List", "Index")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}